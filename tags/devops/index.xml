<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on Massimiliano's Tech Chronicles</title><link>https://maxdon.tech/tags/devops/</link><description>Recent content in devops on Massimiliano's Tech Chronicles</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Jan 2023 16:39:35 +0100</lastBuildDate><atom:link href="https://maxdon.tech/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Goodbye secrets ðŸ‘‹, Hello token exchange: Connect Your GitHub Actions to Azure securely</title><link>https://maxdon.tech/posts/github-azure-oidc/</link><pubDate>Thu, 19 Jan 2023 16:39:35 +0100</pubDate><guid>https://maxdon.tech/posts/github-azure-oidc/</guid><description>OpenID Connect (OIDC) integration between Azure Active Directory and GitHub allows your GitHub Actions workflows to securely access resources in Azure, without needing to store the Azure credentials in the GitHub action secrets.
This functionality has been available for quite a while, it was first announced on October 2021 and up until now, it has been on my &amp;ldquo;things to look into&amp;rdquo; list.
Recently I&amp;rsquo;ve been working on a project to migrate Azure DevOps to GitHub so I decided that time has come to look into this functionality.</description></item><item><title>Terraform Tips &amp; Tricks: Managing Large-Scale Azure Resource Imports</title><link>https://maxdon.tech/posts/import-many-terraform/</link><pubDate>Sun, 08 Jan 2023 14:44:21 +0000</pubDate><guid>https://maxdon.tech/posts/import-many-terraform/</guid><description>This post describes my journey to import several hundred Azure resources in Terraform. Before digging into the what and the how let me give you a brief description of our environment&amp;rsquo;s infrastructure.
In my current company, we manage many Azure resources for each environment and we have a few of them (DEV, TEST, etc.). Every environment looks pretty much the same and it mostly differs by product SKUs, database sizes, etc.</description></item><item><title>Dynamically scale down AppService outside business hours to save ðŸ’°ðŸ’°</title><link>https://maxdon.tech/posts/dynamically-scale-app-service-plans/</link><pubDate>Mon, 25 Jul 2022 12:59:43 +0000</pubDate><guid>https://maxdon.tech/posts/dynamically-scale-app-service-plans/</guid><description>The other day I was on a quest to lower a bit our Azure spending.
Im my current company we have several environment that we use for different purposes, Development, Test, Acceptance and so on.
All these environments have slightly different tiers for various services and I was wondering how to lower App Service Plan tier outside business hours.
App Services have some built-in, albeit limited, capabilities to scale but this only involves scaling out.</description></item><item><title>Zero downtime deployment with Azure Container Apps and Github Actions - Part 1</title><link>https://maxdon.tech/posts/aca-zero-downtime-1/</link><pubDate>Fri, 24 Jun 2022 10:12:18 +0000</pubDate><guid>https://maxdon.tech/posts/aca-zero-downtime-1/</guid><description>Introduction As you may know, Azure Container Apps went out of preview during Microsoft Build in late May this year. Azure Container Apps is a very interesting service that runs on top of Kubernetes adding some additional powerful capabilities in a simple and covinient way. Some of these capabilities are:
Built in support for Keda autoscalers Built in support for Dapr components Ability to scale to zero There&amp;rsquo;s a lot more to it, you can dig deeper on the official Microsoft documentation here</description></item></channel></rss>