<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>servicebus on Massimiliano's Tech Chronicles</title><link>https://ilmax.github.io/tags/servicebus/</link><description>Recent content in servicebus on Massimiliano's Tech Chronicles</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 May 2022 10:01:30 +0000</lastBuildDate><atom:link href="https://ilmax.github.io/tags/servicebus/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Managed Identity with Azure WebJobs and Service Bus</title><link>https://ilmax.github.io/posts/servicebus-managed-identity/</link><pubDate>Tue, 24 May 2022 10:01:30 +0000</pubDate><guid>https://ilmax.github.io/posts/servicebus-managed-identity/</guid><description>Managed Service Identity (or MSI for short) allows Azure resources to connect to Azure services that supports AD authentication (see the full list here) without using secrets. This is extremely useful because handling secrets the proper way it&amp;rsquo;s far from easy.
How MSI works is beyond the scope of the article and you can find more information here, but in a nutshell:
You create a service principal object and an application in Azure AD to represents your service (this is done automatically when turning on managed identity) You grant some permissions to access the downstream service it needs to communicate to You configure the authentication to the downstream service to be done via MSI In my case, I have a WebJob that processes messages via a ServiceBus queue, so I granted the service principal a permission to read from the queue using the built in Azure Service Bus Data Receiver role.</description></item></channel></rss>